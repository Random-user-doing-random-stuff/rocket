-- Your SQL goes here
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

ALTER TABLE IF EXISTS public.user_roles
DROP CONSTRAINT IF EXISTS user_roles_role_id_fkey;

ALTER TABLE IF EXISTS public.user_roles
DROP CONSTRAINT IF EXISTS user_roles_user_id_fkey;

ALTER TABLE IF EXISTS public.words
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.comments
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.comments
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.word_tags
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.word_tags
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.word_has_type
DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public.word_has_type
DROP CONSTRAINT IF EXISTS None;

DROP TABLE IF EXISTS public.roles;

DROP TYPE IF EXISTS public.word_status;

CREATE TYPE public.word_status AS ENUM ('draft', 'review', 'approved', 'archived');

CREATE TABLE IF NOT EXISTS public.roles (
    id integer NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    permissions jsonb NOT NULL,
    active boolean NOT NULL DEFAULT true,
    PRIMARY KEY (id),
    UNIQUE (name)
);

DROP TABLE IF EXISTS public.user_roles;

CREATE TABLE IF NOT EXISTS public.user_roles (
    user_id integer NOT NULL,
    role_id integer NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id)
);

DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users (
    id integer NOT NULL,
    username text COLLATE pg_catalog."default" NOT NULL,
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    email text NOT NULL,
    phone_numer text COLLATE pg_catalog."default",
    created_at timestamp
    with
        time zone DEFAULT CURRENT_TIMESTAMP,
        CONSTRAINT id PRIMARY KEY (id),
        UNIQUE (username)
);

DROP TABLE IF EXISTS public.words;

CREATE TABLE IF NOT EXISTS public.words (
    id integer NOT NULL,
    word text NOT NULL,
    definition text NOT NULL,
    video_url text NOT NULL,
    created_by integer,
    created_at timestamp
    with
        time zone DEFAULT CURRENT_TIMESTAMP,
        updated_at timestamp
    with
        time zone,
        status word_status DEFAULT 'draft',
        PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.comments;

CREATE TABLE IF NOT EXISTS public.comments (
    id integer NOT NULL,
    user_id integer,
    word_id integer,
    comment text NOT NULL,
    created_at timestamp
    with
        time zone DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.tags;

CREATE TABLE IF NOT EXISTS public.tags (
    id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);

DROP TABLE IF EXISTS public.word_tags;

CREATE TABLE IF NOT EXISTS public.word_tags (
    word_id integer,
    tag_id integer,
    PRIMARY KEY (word_id, tag_id)
);

DROP TABLE IF EXISTS public.word_type;

CREATE TABLE IF NOT EXISTS public.word_type (
    id integer,
    type text NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (type)
);

DROP TABLE IF EXISTS public.word_has_type;

CREATE TABLE IF NOT EXISTS public.word_has_type (
    type_id integer NOT NULL,
    word_id integer NOT NULL,
    PRIMARY KEY (type_id, word_id)
);

ALTER TABLE IF EXISTS public.user_roles ADD CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.user_roles ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.words ADD FOREIGN KEY (created_by) REFERENCES public.users (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.comments ADD FOREIGN KEY (word_id) REFERENCES public.words (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE NOT VALID;

ALTER TABLE IF EXISTS public.comments ADD FOREIGN KEY (user_id) REFERENCES public.users (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE CASCADE NOT VALID;

ALTER TABLE IF EXISTS public.word_tags ADD FOREIGN KEY (word_id) REFERENCES public.words (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.word_tags ADD FOREIGN KEY (tag_id) REFERENCES public.tags (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.word_has_type ADD FOREIGN KEY (word_id) REFERENCES public.words (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE IF EXISTS public.word_has_type ADD FOREIGN KEY (type_id) REFERENCES public.word_type (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

END;
